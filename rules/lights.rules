var Timer shutDownTimer = null
var Timer orderDownTimer = null

val Functions$Function2<SwitchItem,Functions$Function1<Integer,Boolean>,Boolean> setShutDownTimer = [ 
	SwitchItem switchItem,
    Functions$Function1<Integer,Boolean> checkLastMotion|
    
    shutDownTimer = createTimer(now.plusMinutes(15), [|
        logInfo("lights", "Preverjam ali je prižgana luč nad TVjem")
        if (PlugLiDn2Switch2.state == ON) {
            logInfo("lights", "TV luč je prižgana zato prestavim ugašanje za {} minut", 15)
            shutDownTimer.reschedule(now.plusMinutes(15))
        } else {
            logInfo("lights", "TV luč je ugasnjena zato preverjam gibanje")
            if (Mot.state == OFF){
                logInfo("lights", "Ker ni več gibanja, preverim kdaj je bilo zadnje gibanje")
                if (checkLastMotion.apply(15)) {
                    switchItem.sendCommand(OFF)
                    shutDownTimer = null
                } else {
                    shutDownTimer.reschedule(now.plusMinutes(15))
                }
            } else {
                logInfo("lights", "Ker še vedno zaznavam gibanje, prestavim preverjanje še za 5 min")
                shutDownTimer.reschedule(now.plusMinutes(15))
            }
        }
    ])
	return true
]

val Functions$Function1<Integer,Boolean> checkLastMotion = [ 
	Integer checkTime|
    
    val intCheckTime = checkTime.intValue()
    val lastUpdateMot = Mot.members.sortBy[lastUpdate].last as SwitchItem
    val lastUpdateTimeDiff = now.millis - lastUpdateMot.previousState.timestamp.time
    logInfo("lights", "Zadnje gibanje je bilo zaznano na senzorju {} {} millisekund nazaj", lastUpdateMot, lastUpdateTimeDiff)
        if (lastUpdateTimeDiff > intCheckTime) {
            logInfo("lights", "Ker je bilo zadnje gibanje zaznano več kot {} minut nazaj, ugašam luč na stopnišču", intCheckTime)
            return true
        } else {
            logInfo("lights", "Ker je bilo zaznano gibanje manj kot {} minut nazaj, zamaknem ugašanje luči.", intCheckTime)
            return false
        }
]


rule "Stairway lights on"
when
    Item OutSolarRad changed
then
    logDebug("lights", "Sprememba zunanje osvetljenosti na {}", OutSolarRad.state)
    if (Integer.parseInt((OutSolarRad.state).toString) <= 8) {
        if (PlugLiSt2Switch2.state == OFF) {
            if (Integer.parseInt((OutSolarRad.previousState.state).toString) > Integer.parseInt((OutSolarRad.state).toString)) {
                PlugLiSt2Switch2.sendCommand(ON)
                if (now.getHourOfDay > 16) {
                    logDebug("lights", "Prižigam luči in nastavim timer za spust žaluzij")
                    orderDownTimer = createTimer(now.plusMinutes(15), [|
                        logDebug("lights", "Timer sproži spust žaluzij")
                        AllCompleteDo.sendCommand(ON)
                        orderDownTimer = null
                    ])
                }
            }   
        }
    } else {
        if (PlugLiSt2Switch2.state == ON) {
            PlugLiSt2Switch2.sendCommand(OFF)
            logDebug("lights", "Ugašam luči")
        }
    }
    logDebug("lights", "Končal preverjanje luči na stopnišču")
end

rule "Stairway light on when movement"
when
    Member of Mot changed to ON
then
    logInfo("lights", "Zaznal gibanje zato preverim ali prižgati luči na stopnicah, prvo stanje stikala {} in še zunanje osvetlitve {}", PlugLiSt2Switch2.state, OutSolarRad.state)
    if (PlugLiSt2Switch2.state == OFF && Integer.parseInt((OutSolarRad.state).toString) <= 8) {
        if (LumNadStopnicami.state < 10) {
            logInfo("lights", "Je tema zato prižgem luči za 15 min")
            PlugLiSt2Switch2.sendCommand(ON)
            if (now.getHourOfDay < 5) {
                setShutDownTimer.apply(PlugLiSt2Switch2, checkLastMotion)
            }
        } else logInfo("lights", "Je dovolj svetlo zato ne prižgem luči")
    } else logInfo("lights", "Ni potrebe po lučeh, zato ignoriram")
end

rule "Stairway light off if no movement"
when
    Time cron "0 0 23 * * ? *"
then
    logInfo("lights", "Ura je enajst in preverjam ali lahko ugasnem luči na stopnišču")
    setShutDownTimer.apply(PlugLiSt2Switch2, checkLastMotion)
end